'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.42000
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict On
Option Explicit On

Imports System
Imports System.Collections.Generic
Imports System.ComponentModel
Imports System.Data
Imports System.Data.Linq
Imports System.Data.Linq.Mapping
Imports System.Linq
Imports System.Linq.Expressions
Imports System.Reflection


<Global.System.Data.Linq.Mapping.DatabaseAttribute(Name:="dnndev_v902.me")>  _
Partial Public Class kk_aj_katalogenUserLinqDataContext
	Inherits System.Data.Linq.DataContext
	
	Private Shared mappingSource As System.Data.Linq.Mapping.MappingSource = New AttributeMappingSource()
	
  #Region "Extensibility Method Definitions"
  Partial Private Sub OnCreated()
  End Sub
  Partial Private Sub Insertkk_aj_tbl_Utovare(instance As kk_aj_tbl_Utovare)
    End Sub
  Partial Private Sub Updatekk_aj_tbl_Utovare(instance As kk_aj_tbl_Utovare)
    End Sub
  Partial Private Sub Deletekk_aj_tbl_Utovare(instance As kk_aj_tbl_Utovare)
    End Sub
  Partial Private Sub Insertkk_aj_tbl_Notifieringar(instance As kk_aj_tbl_Notifieringar)
    End Sub
  Partial Private Sub Updatekk_aj_tbl_Notifieringar(instance As kk_aj_tbl_Notifieringar)
    End Sub
  Partial Private Sub Deletekk_aj_tbl_Notifieringar(instance As kk_aj_tbl_Notifieringar)
    End Sub
  #End Region
	
	Public Sub New()
		MyBase.New(Global.kulturkatalogenUser.My.MySettings.Default.dnndev_v902_meConnectionString, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As String, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public Sub New(ByVal connection As System.Data.IDbConnection, ByVal mappingSource As System.Data.Linq.Mapping.MappingSource)
		MyBase.New(connection, mappingSource)
		OnCreated
	End Sub
	
	Public ReadOnly Property kk_aj_tbl_Utovares() As System.Data.Linq.Table(Of kk_aj_tbl_Utovare)
		Get
			Return Me.GetTable(Of kk_aj_tbl_Utovare)
		End Get
	End Property
	
	Public ReadOnly Property kk_aj_tbl_Notifieringars() As System.Data.Linq.Table(Of kk_aj_tbl_Notifieringar)
		Get
			Return Me.GetTable(Of kk_aj_tbl_Notifieringar)
		End Get
	End Property
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.kk_aj_proc_getuserdata")>  _
	Public Function kk_aj_proc_getuserdata(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userid As System.Nullable(Of Integer)) As ISingleResult(Of kk_aj_proc_getuserdataResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userid)
		Return CType(result.ReturnValue,ISingleResult(Of kk_aj_proc_getuserdataResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.kk_aj_proc_getuserrolls")>  _
	Public Function kk_aj_proc_getuserrolls(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal userid As System.Nullable(Of Integer)) As ISingleResult(Of kk_aj_proc_getuserrollsResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), userid)
		Return CType(result.ReturnValue,ISingleResult(Of kk_aj_proc_getuserrollsResult))
	End Function
	
	<Global.System.Data.Linq.Mapping.FunctionAttribute(Name:="dbo.kk_aj_proc_userinrollbykonstformtyp")>  _
	Public Function kk_aj_proc_userinrollbykonstformtyp(<Global.System.Data.Linq.Mapping.ParameterAttribute(DbType:="Int")> ByVal konstformtypid As System.Nullable(Of Integer)) As ISingleResult(Of kk_aj_proc_userinrollbykonstformtypResult)
		Dim result As IExecuteResult = Me.ExecuteMethodCall(Me, CType(MethodInfo.GetCurrentMethod,MethodInfo), konstformtypid)
		Return CType(result.ReturnValue,ISingleResult(Of kk_aj_proc_userinrollbykonstformtypResult))
	End Function
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.kk_aj_tbl_Utovare")>  _
Partial Public Class kk_aj_tbl_Utovare
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _UtovarID As Integer
	
	Private _Organisation As String
	
	Private _Fornamn As String
	
	Private _Efternamn As String
	
	Private _Telefonnummer As String
	
	Private _Adress As String
	
	Private _Postnr As String
	
	Private _Ort As String
	
	Private _Epost As String
	
	Private _Kommun As String
	
	Private _Hemsida As String
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnUtovarIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnUtovarIDChanged()
    End Sub
    Partial Private Sub OnOrganisationChanging(value As String)
    End Sub
    Partial Private Sub OnOrganisationChanged()
    End Sub
    Partial Private Sub OnFornamnChanging(value As String)
    End Sub
    Partial Private Sub OnFornamnChanged()
    End Sub
    Partial Private Sub OnEfternamnChanging(value As String)
    End Sub
    Partial Private Sub OnEfternamnChanged()
    End Sub
    Partial Private Sub OnTelefonnummerChanging(value As String)
    End Sub
    Partial Private Sub OnTelefonnummerChanged()
    End Sub
    Partial Private Sub OnAdressChanging(value As String)
    End Sub
    Partial Private Sub OnAdressChanged()
    End Sub
    Partial Private Sub OnPostnrChanging(value As String)
    End Sub
    Partial Private Sub OnPostnrChanged()
    End Sub
    Partial Private Sub OnOrtChanging(value As String)
    End Sub
    Partial Private Sub OnOrtChanged()
    End Sub
    Partial Private Sub OnEpostChanging(value As String)
    End Sub
    Partial Private Sub OnEpostChanged()
    End Sub
    Partial Private Sub OnKommunChanging(value As String)
    End Sub
    Partial Private Sub OnKommunChanged()
    End Sub
    Partial Private Sub OnHemsidaChanging(value As String)
    End Sub
    Partial Private Sub OnHemsidaChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UtovarID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property UtovarID() As Integer
		Get
			Return Me._UtovarID
		End Get
		Set
			If ((Me._UtovarID = value)  _
						= false) Then
				Me.OnUtovarIDChanging(value)
				Me.SendPropertyChanging
				Me._UtovarID = value
				Me.SendPropertyChanged("UtovarID")
				Me.OnUtovarIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Organisation", DbType:="NVarChar(150)")>  _
	Public Property Organisation() As String
		Get
			Return Me._Organisation
		End Get
		Set
			If (String.Equals(Me._Organisation, value) = false) Then
				Me.OnOrganisationChanging(value)
				Me.SendPropertyChanging
				Me._Organisation = value
				Me.SendPropertyChanged("Organisation")
				Me.OnOrganisationChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Fornamn", DbType:="NVarChar(70)")>  _
	Public Property Fornamn() As String
		Get
			Return Me._Fornamn
		End Get
		Set
			If (String.Equals(Me._Fornamn, value) = false) Then
				Me.OnFornamnChanging(value)
				Me.SendPropertyChanging
				Me._Fornamn = value
				Me.SendPropertyChanged("Fornamn")
				Me.OnFornamnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Efternamn", DbType:="NVarChar(70)")>  _
	Public Property Efternamn() As String
		Get
			Return Me._Efternamn
		End Get
		Set
			If (String.Equals(Me._Efternamn, value) = false) Then
				Me.OnEfternamnChanging(value)
				Me.SendPropertyChanging
				Me._Efternamn = value
				Me.SendPropertyChanged("Efternamn")
				Me.OnEfternamnChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Telefonnummer", DbType:="NVarChar(50)")>  _
	Public Property Telefonnummer() As String
		Get
			Return Me._Telefonnummer
		End Get
		Set
			If (String.Equals(Me._Telefonnummer, value) = false) Then
				Me.OnTelefonnummerChanging(value)
				Me.SendPropertyChanging
				Me._Telefonnummer = value
				Me.SendPropertyChanged("Telefonnummer")
				Me.OnTelefonnummerChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Adress", DbType:="NVarChar(70)")>  _
	Public Property Adress() As String
		Get
			Return Me._Adress
		End Get
		Set
			If (String.Equals(Me._Adress, value) = false) Then
				Me.OnAdressChanging(value)
				Me.SendPropertyChanging
				Me._Adress = value
				Me.SendPropertyChanged("Adress")
				Me.OnAdressChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Postnr", DbType:="NVarChar(10)")>  _
	Public Property Postnr() As String
		Get
			Return Me._Postnr
		End Get
		Set
			If (String.Equals(Me._Postnr, value) = false) Then
				Me.OnPostnrChanging(value)
				Me.SendPropertyChanging
				Me._Postnr = value
				Me.SendPropertyChanged("Postnr")
				Me.OnPostnrChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Ort", DbType:="NVarChar(80)")>  _
	Public Property Ort() As String
		Get
			Return Me._Ort
		End Get
		Set
			If (String.Equals(Me._Ort, value) = false) Then
				Me.OnOrtChanging(value)
				Me.SendPropertyChanging
				Me._Ort = value
				Me.SendPropertyChanged("Ort")
				Me.OnOrtChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Epost", DbType:="NVarChar(150)")>  _
	Public Property Epost() As String
		Get
			Return Me._Epost
		End Get
		Set
			If (String.Equals(Me._Epost, value) = false) Then
				Me.OnEpostChanging(value)
				Me.SendPropertyChanging
				Me._Epost = value
				Me.SendPropertyChanged("Epost")
				Me.OnEpostChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Kommun", DbType:="NVarChar(80)")>  _
	Public Property Kommun() As String
		Get
			Return Me._Kommun
		End Get
		Set
			If (String.Equals(Me._Kommun, value) = false) Then
				Me.OnKommunChanging(value)
				Me.SendPropertyChanging
				Me._Kommun = value
				Me.SendPropertyChanged("Kommun")
				Me.OnKommunChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Hemsida", DbType:="NVarChar(250)")>  _
	Public Property Hemsida() As String
		Get
			Return Me._Hemsida
		End Get
		Set
			If (String.Equals(Me._Hemsida, value) = false) Then
				Me.OnHemsidaChanging(value)
				Me.SendPropertyChanging
				Me._Hemsida = value
				Me.SendPropertyChanged("Hemsida")
				Me.OnHemsidaChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

<Global.System.Data.Linq.Mapping.TableAttribute(Name:="dbo.kk_aj_tbl_Notifieringar")>  _
Partial Public Class kk_aj_tbl_Notifieringar
	Implements System.ComponentModel.INotifyPropertyChanging, System.ComponentModel.INotifyPropertyChanged
	
	Private Shared emptyChangingEventArgs As PropertyChangingEventArgs = New PropertyChangingEventArgs(String.Empty)
	
	Private _noteID As Integer
	
	Private _noteTypId As System.Nullable(Of Integer)
	
	Private _userid As System.Nullable(Of Integer)
	
	Private _title As String
	
	Private _url As String
	
	Private _extranote As String
	
	Private _date As System.Nullable(Of Date)
	
    #Region "Extensibility Method Definitions"
    Partial Private Sub OnLoaded()
    End Sub
    Partial Private Sub OnValidate(action As System.Data.Linq.ChangeAction)
    End Sub
    Partial Private Sub OnCreated()
    End Sub
    Partial Private Sub OnnoteIDChanging(value As Integer)
    End Sub
    Partial Private Sub OnnoteIDChanged()
    End Sub
    Partial Private Sub OnnoteTypIdChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnnoteTypIdChanged()
    End Sub
    Partial Private Sub OnuseridChanging(value As System.Nullable(Of Integer))
    End Sub
    Partial Private Sub OnuseridChanged()
    End Sub
    Partial Private Sub OntitleChanging(value As String)
    End Sub
    Partial Private Sub OntitleChanged()
    End Sub
    Partial Private Sub OnurlChanging(value As String)
    End Sub
    Partial Private Sub OnurlChanged()
    End Sub
    Partial Private Sub OnextranoteChanging(value As String)
    End Sub
    Partial Private Sub OnextranoteChanged()
    End Sub
    Partial Private Sub OndateChanging(value As System.Nullable(Of Date))
    End Sub
    Partial Private Sub OndateChanged()
    End Sub
    #End Region
	
	Public Sub New()
		MyBase.New
		OnCreated
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_noteID", AutoSync:=AutoSync.OnInsert, DbType:="Int NOT NULL IDENTITY", IsPrimaryKey:=true, IsDbGenerated:=true)>  _
	Public Property noteID() As Integer
		Get
			Return Me._noteID
		End Get
		Set
			If ((Me._noteID = value)  _
						= false) Then
				Me.OnnoteIDChanging(value)
				Me.SendPropertyChanging
				Me._noteID = value
				Me.SendPropertyChanged("noteID")
				Me.OnnoteIDChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_noteTypId", DbType:="Int")>  _
	Public Property noteTypId() As System.Nullable(Of Integer)
		Get
			Return Me._noteTypId
		End Get
		Set
			If (Me._noteTypId.Equals(value) = false) Then
				Me.OnnoteTypIdChanging(value)
				Me.SendPropertyChanging
				Me._noteTypId = value
				Me.SendPropertyChanged("noteTypId")
				Me.OnnoteTypIdChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_userid", DbType:="Int")>  _
	Public Property userid() As System.Nullable(Of Integer)
		Get
			Return Me._userid
		End Get
		Set
			If (Me._userid.Equals(value) = false) Then
				Me.OnuseridChanging(value)
				Me.SendPropertyChanging
				Me._userid = value
				Me.SendPropertyChanged("userid")
				Me.OnuseridChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_title", DbType:="NVarChar(100)")>  _
	Public Property title() As String
		Get
			Return Me._title
		End Get
		Set
			If (String.Equals(Me._title, value) = false) Then
				Me.OntitleChanging(value)
				Me.SendPropertyChanging
				Me._title = value
				Me.SendPropertyChanged("title")
				Me.OntitleChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_url", DbType:="NVarChar(250)")>  _
	Public Property url() As String
		Get
			Return Me._url
		End Get
		Set
			If (String.Equals(Me._url, value) = false) Then
				Me.OnurlChanging(value)
				Me.SendPropertyChanging
				Me._url = value
				Me.SendPropertyChanged("url")
				Me.OnurlChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_extranote", DbType:="NVarChar(250)")>  _
	Public Property extranote() As String
		Get
			Return Me._extranote
		End Get
		Set
			If (String.Equals(Me._extranote, value) = false) Then
				Me.OnextranoteChanging(value)
				Me.SendPropertyChanging
				Me._extranote = value
				Me.SendPropertyChanged("extranote")
				Me.OnextranoteChanged
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Name:="date", Storage:="_date", DbType:="DateTime")>  _
	Public Property [date]() As System.Nullable(Of Date)
		Get
			Return Me._date
		End Get
		Set
			If (Me._date.Equals(value) = false) Then
				Me.OndateChanging(value)
				Me.SendPropertyChanging
				Me._date = value
				Me.SendPropertyChanged("[date]")
				Me.OndateChanged
			End If
		End Set
	End Property
	
	Public Event PropertyChanging As PropertyChangingEventHandler Implements System.ComponentModel.INotifyPropertyChanging.PropertyChanging
	
	Public Event PropertyChanged As PropertyChangedEventHandler Implements System.ComponentModel.INotifyPropertyChanged.PropertyChanged
	
	Protected Overridable Sub SendPropertyChanging()
		If ((Me.PropertyChangingEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanging(Me, emptyChangingEventArgs)
		End If
	End Sub
	
	Protected Overridable Sub SendPropertyChanged(ByVal propertyName As [String])
		If ((Me.PropertyChangedEvent Is Nothing)  _
					= false) Then
			RaiseEvent PropertyChanged(Me, New PropertyChangedEventArgs(propertyName))
		End If
	End Sub
End Class

Partial Public Class kk_aj_proc_getuserdataResult
	
	Private _UserID As Integer
	
	Private _Username As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _Email As String
	
	Private _PropertyValue As String
	
	Private _PropertyDefinitionID As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int NOT NULL")>  _
	Public Property UserID() As Integer
		Get
			Return Me._UserID
		End Get
		Set
			If ((Me._UserID = value)  _
						= false) Then
				Me._UserID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me._Username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me._FirstName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me._LastName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyValue", DbType:="NVarChar(3750)")>  _
	Public Property PropertyValue() As String
		Get
			Return Me._PropertyValue
		End Get
		Set
			If (String.Equals(Me._PropertyValue, value) = false) Then
				Me._PropertyValue = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_PropertyDefinitionID", DbType:="Int NOT NULL")>  _
	Public Property PropertyDefinitionID() As Integer
		Get
			Return Me._PropertyDefinitionID
		End Get
		Set
			If ((Me._PropertyDefinitionID = value)  _
						= false) Then
				Me._PropertyDefinitionID = value
			End If
		End Set
	End Property
End Class

Partial Public Class kk_aj_proc_getuserrollsResult
	
	Private _RoleName As String
	
	Private _RoleID As Integer
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property RoleName() As String
		Get
			Return Me._RoleName
		End Get
		Set
			If (String.Equals(Me._RoleName, value) = false) Then
				Me._RoleName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_RoleID", DbType:="Int NOT NULL")>  _
	Public Property RoleID() As Integer
		Get
			Return Me._RoleID
		End Get
		Set
			If ((Me._RoleID = value)  _
						= false) Then
				Me._RoleID = value
			End If
		End Set
	End Property
End Class

Partial Public Class kk_aj_proc_userinrollbykonstformtypResult
	
	Private _KonstformID As Integer
	
	Private _dnnRollid As System.Nullable(Of Integer)
	
	Private _UserID As Integer
	
	Private _Username As String
	
	Private _FirstName As String
	
	Private _LastName As String
	
	Private _Email As String
	
	Private _DisplayName As String
	
	Public Sub New()
		MyBase.New
	End Sub
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_KonstformID", DbType:="Int NOT NULL")>  _
	Public Property KonstformID() As Integer
		Get
			Return Me._KonstformID
		End Get
		Set
			If ((Me._KonstformID = value)  _
						= false) Then
				Me._KonstformID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_dnnRollid", DbType:="Int")>  _
	Public Property dnnRollid() As System.Nullable(Of Integer)
		Get
			Return Me._dnnRollid
		End Get
		Set
			If (Me._dnnRollid.Equals(value) = false) Then
				Me._dnnRollid = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_UserID", DbType:="Int NOT NULL")>  _
	Public Property UserID() As Integer
		Get
			Return Me._UserID
		End Get
		Set
			If ((Me._UserID = value)  _
						= false) Then
				Me._UserID = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Username", DbType:="NVarChar(100) NOT NULL", CanBeNull:=false)>  _
	Public Property Username() As String
		Get
			Return Me._Username
		End Get
		Set
			If (String.Equals(Me._Username, value) = false) Then
				Me._Username = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_FirstName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property FirstName() As String
		Get
			Return Me._FirstName
		End Get
		Set
			If (String.Equals(Me._FirstName, value) = false) Then
				Me._FirstName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_LastName", DbType:="NVarChar(50) NOT NULL", CanBeNull:=false)>  _
	Public Property LastName() As String
		Get
			Return Me._LastName
		End Get
		Set
			If (String.Equals(Me._LastName, value) = false) Then
				Me._LastName = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_Email", DbType:="NVarChar(256)")>  _
	Public Property Email() As String
		Get
			Return Me._Email
		End Get
		Set
			If (String.Equals(Me._Email, value) = false) Then
				Me._Email = value
			End If
		End Set
	End Property
	
	<Global.System.Data.Linq.Mapping.ColumnAttribute(Storage:="_DisplayName", DbType:="NVarChar(128) NOT NULL", CanBeNull:=false)>  _
	Public Property DisplayName() As String
		Get
			Return Me._DisplayName
		End Get
		Set
			If (String.Equals(Me._DisplayName, value) = false) Then
				Me._DisplayName = value
			End If
		End Set
	End Property
End Class
